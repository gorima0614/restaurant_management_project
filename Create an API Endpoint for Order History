1. Update Order model in orders/models.py
Make sure your Order model has a link to the user and items. Example:

from django.db import models
from django.contrib.auth.models import User
from .models import OrderStatus  # if you created this earlier

class Order(models.Model):
    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name="orders")
    created_at = models.DateTimeField(auto_now_add=True)
    total_amount = models.DecimalField(max_digits=10, decimal_places=2)
    status = models.ForeignKey(OrderStatus, on_delete=models.SET_NULL, null=True, blank=True)

    def __str__(self):
        return f"Order #{self.id} - {self.user.username}"


class OrderItem(models.Model):
    order = models.ForeignKey(Order, on_delete=models.CASCADE, related_name="items")
    product_name = models.CharField(max_length=100)
    quantity = models.PositiveIntegerField()
    price = models.DecimalField(max_digits=10, decimal_places=2)

    def __str__(self):
        return f"{self.product_name} (x{self.quantity})"

2. Create a serializer in orders/serializers.py
from rest_framework import serializers
from .models import Order, OrderItem

class OrderItemSerializer(serializers.ModelSerializer):
    class Meta:
        model = OrderItem
        fields = ["product_name", "quantity", "price"]


class OrderSerializer(serializers.ModelSerializer):
    items = OrderItemSerializer(many=True, read_only=True)

    class Meta:
        model = Order
        fields = ["id", "created_at", "total_amount", "status", "items"]

3. Create API view in orders/views.py
from rest_framework.permissions import IsAuthenticated
from rest_framework.response import Response
from rest_framework.views import APIView
from .models import Order
from .serializers import OrderSerializer

class OrderHistoryView(APIView):
    permission_classes = [IsAuthenticated]

    def get(self, request):
        # Get all orders for the logged-in user
        orders = Order.objects.filter(user=request.user).order_by("-created_at")
        serializer = OrderSerializer(orders, many=True)
        return Response(serializer.data)

4. Add URL in orders/urls.py
from django.urls import path
from .views import OrderHistoryView

urlpatterns = [
    path("history/", OrderHistoryView.as_view(), name="order-history"),
]

5. Project-level urls.py (ensure orders is included)
from django.urls import path, include

urlpatterns = [
    path("api/orders/", include("orders.urls")),
]

âœ… Test the endpoint

Login or obtain a token/session (depending on auth setup).

Hit endpoint:

GET http://127.0.0.1:8000/api/orders/history/


Response (example):

[
  {
    "id": 5,
    "created_at": "2025-09-15T10:30:45Z",
    "total_amount": "450.00",
    "status": 1,
    "items": [
      {"product_name": "Pizza", "quantity": 2, "price": "200.00"},
      {"product_name": "Coke", "quantity": 1, "price": "50.00"}
    ]
  }
]
