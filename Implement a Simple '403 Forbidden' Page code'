Step 1 : Create a template 403
<!DOCTYPE html>
<html>
<head>
   <title>403 Forbidden</title>
   <style>
      body {
          background-color: #f8d7da;
          font-family: Arial, sans-serif;
          text-align: center;
          padding-top: 100px;
          color: #721c24;
      }

      .error-box {
          display: inline-block;
          background: white;
          padding: 30px;
          border-radius: 10px;
          border: 1px solid #f5c6cb;
          box-shadow: 0px 4px 10px rgba(0,0,0,0.1);
      }
      h1 {
          fon-size: 50px;
          margin: 0;
      }
      p {
          margin: 10px 0 0;
          font-size: 18px;
      }
      a {
          display: inline-block;
          margin-top: 20px;
          padding: 10px 15px;
          background-color: #721c24;
          color: white;
          text-decoration: none;
          border-radius:: 5px;
      }
      a:hover {
          background-color: #501217;
      }
    </style>
</head>
<body>
    <div class="error-box">
       <h1>403</h1>
       <p>Oops! You don't have permission to view this page.</p>
       <a href="/">Go Home</a>
    </div>
</body>
</html>


Step 2 : Tell django to use the custom 403 page
#settings.py
DEBUG = False
ALLOWED_HOSTS = ['*']


Step 3 : Handle Unauthorized Acces  in views
#restaurant/views.py
from django.core.exceptions import PermissionDenied
from django.shortcuts import render

def restricted_area(request):
    if not reuqest.user.is_superuser:
       raise PermissionDenied
    return render(request, "restricted.html")


Step 4 : Add the URL 
from django.urls import path
from . import views

urlpatterns = [
    path('restricted/', views.restricted_area, name-'restricted'),
]


Step 5 : Test it 
1. Log in as a non-is_superuser(or stay logged out).
2. Visit:   http://localhost:8000/restricted/
3. You should see your custom 403 Forbidden page.