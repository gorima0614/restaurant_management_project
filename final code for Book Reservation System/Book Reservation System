# models.py

from django.db import models

class Book(models.Model):
    title = models.CharField(max_length=200)
    author = models.CharField(max_length=100)
    reserved = models.BooleanField(default=False)

    def __str__(self):
        return self.title

# serializers.py

from rest_framework import serializers
from .models import Book

class BookSerializer(serializers.ModelSerializer):
    class Meta:
        model = Book
        fields = ['id', 'title', 'author', 'reserved']

# views.py

from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework import status
from django.shortcuts import get_object_or_404
from .models import Book
from .serializers import BookSerializer

class ReserveBookView(APIView):
    def post(self, request, book_id):
        book = get_object_or_404(Book, id=book_id)

        if book.reserved:
            return Response(
                {'error': 'Book is already reserved.'},
                status=status.HTTP_400_BAD_REQUEST
            )

        book.reserved = True
        book.save()

        serializer = BookSerializer(book)
        return Response(
            {'message': 'Book reserved successfully.', 'book': serializer.data},
            status=status.HTTP_200_OK
        )

# urls.py

from django.urls import path
from .views import ReserveBookView

urlpatterns = [
    path('api/books/<int:book_id>/reserve/', ReserveBookView.as_view(), name='reserve-book'),
]

{
  "message": "Book reserved successfully.",
  "book": {
    "id": 3,
    "title": "Atomic Habits",
    "author": "James Clear",
    "reserved": true
  }
}

{
  "error": "Book is already reserved."
}
