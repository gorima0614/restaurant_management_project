# models.py

from django.db import models
from django.contrib.auth.models import User
from django.utils import timezone

class Book(models.Model):
    title = models.CharField(max_length=200)
    author = models.CharField(max_length=100)
    total_copies = models.IntegerField(default=1)

    def __str__(self):
        return self.title

    @property
    def available_copies(self):
        reserved_count = Reservation.objects.filter(book=self, returned=False).count()
        return self.total_copies - reserved_count

class LibraryMember(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    membership_id = models.CharField(max_length=20, unique=True)

    def __str__(self):
        return self.user.username

class Reservation(models.Model):
    member = models.ForeignKey(LibraryMember, on_delete=models.CASCADE)
    book = models.ForeignKey(Book, on_delete=models.CASCADE)
    reserved_at = models.DateTimeField(default=timezone.now)
    returned = models.BooleanField(default=False)

    def __str__(self):
        return f"{self.member} reserved {self.book}"

# views.py

from django.shortcuts import get_object_or_404
from django.http import JsonResponse
from django.views.decorators.csrf import csrf_exempt
from django.contrib.auth.decorators import login_required
from .models import Book, LibraryMember, Reservation
import json

@csrf_exempt
@login_required
def reserve_book(request):
    if request.method == 'POST':
        data = json.loads(request.body)
        book_id = data.get('book_id')

        book = get_object_or_404(Book, id=book_id)
        member = get_object_or_404(LibraryMember, user=request.user)

        if book.available_copies <= 0:
            return JsonResponse({'error': 'Book not available'}, status=400)

        Reservation.objects.create(member=member, book=book)
        return JsonResponse({'message': f'Book "{book.title}" reserved successfully'})
    
    return JsonResponse({'error': 'Only POST method allowed'}, status=405)

# urls.py

from django.urls import path
from .views import reserve_book

urlpatterns = [
    path('reserve/', reserve_book, name='reserve-book'),
]

# signals.py

from django.db.models.signals import post_save
from django.dispatch import receiver
from django.contrib.auth.models import User
from .models import LibraryMember

@receiver(post_save, sender=User)
def create_member_profile(sender, instance, created, **kwargs):
    if created:
        LibraryMember.objects.create(user=instance, membership_id=f"LIB{instance.id:04d}")

def ready(self):
    import your_app.signals

curl -X POST http://localhost:8000/reserve/ \
     -H "Authorization: Token <your_token>" \
     -H "Content-Type: application/json" \
     -d '{"book_id": 1}'
