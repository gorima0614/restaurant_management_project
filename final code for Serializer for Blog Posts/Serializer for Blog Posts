# models.py

from django.db import models
from django.contrib.auth.models import User

class Post(models.Model):
    title = models.CharField(max_length=255, unique=True)
    content = models.TextField()
    author = models.ForeignKey(User, on_delete=models.CASCADE, related_name='posts')
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return self.title

# serializers.py

from rest_framework import serializers
from .models import Post

class PostSerializer(serializers.ModelSerializer):
    class Meta:
        model = Post
        fields = ['id', 'title', 'content', 'author', 'created_at']
        read_only_fields = ['id', 'created_at']

    def validate_title(self, value):
        if Post.objects.filter(title__iexact=value).exists():
            raise serializers.ValidationError("A post with this title already exists.")
        return value

# views.py

from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework.permissions import IsAuthenticated
from rest_framework import status
from .serializers import PostSerializer

class PostCreateAPIView(APIView):
    permission_classes = [IsAuthenticated]

    def post(self, request):
        serializer = PostSerializer(data=request.data)
        if serializer.is_valid():
            serializer.save(author=request.user)  # Set current user as author
            return Response(serializer.data, status=status.HTTP_201_CREATED)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

# urls.py

from django.urls import path
from .views import PostCreateAPIView

urlpatterns = [
    path('api/posts/create/', PostCreateAPIView.as_view(), name='post-create'),
]

{
  "title": "My First Blog Post",
  "content": "This is the content of the blog post."
}

{
  "id": 1,
  "title": "My First Blog Post",
  "content": "This is the content of the blog post.",
  "author": 3,
  "created_at": "2025-08-02T14:15:00Z"
}
