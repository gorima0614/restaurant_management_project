# users/serializers.py
from rest_framework import serializers
from django.contrib.auth.models import User
from django.contrib.auth.password_validation import validate_password

class UserRegistrationSerializer(serializers.ModelSerializer):
    password = serializers.CharField(write_only=True, required=True, validators=[validate_password])
    email = serializers.EmailField(required=True)

    class Meta:
        model = User
        fields = ('username', 'email', 'password')

    def validate_email(self, value):
        if User.objects.filter(email=value).exists():
            raise serializers.ValidationError("A user with this email already exists.")
        return value

    def create(self, validated_data):
        user = User(
            username=validated_data['username'],
            email=validated_data['email']
        )
        user.set_password(validated_data['password'])  # Password is hashed here
        user.save()
        return user

# users/views.py
from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework import status
from .serializers import UserRegistrationSerializer

class UserRegistrationAPIView(APIView):
    """
    POST /api/register/
    {
      "username": "johndoe",
      "email": "john@example.com",
      "password": "StrongPass123"
    }
    """

    def post(self, request):
        serializer = UserRegistrationSerializer(data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(
                {"message": "User registered successfully."},
                status=status.HTTP_201_CREATED
            )
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

# users/urls.py
from django.urls import path
from .views import UserRegistrationAPIView

urlpatterns = [
    path('register/', UserRegistrationAPIView.as_view(), name='user-register'),
]

# project/urls.py
from django.urls import path, include

urlpatterns = [
    path('api/', include('users.urls')),
]

POST /api/register/
Content-Type: application/json

{
  "username": "janedoe",
  "email": "jane@example.com",
  "password": "SuperSecurePassword123"
}

{
  "message": "User registered successfully."
}

{
  "email": ["A user with this email already exists."]
}

