# models.py

from django.db import models
from django.core.exceptions import ValidationError
from django.db.models.signals import pre_save
from django.dispatch import receiver

class Order(models.Model):
    customer_name = models.CharField(max_length=100)
    total_amount = models.DecimalField(max_digits=10, decimal_places=2)
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"Order #{self.id} - {self.customer_name}"
    

# Signal to prevent saving if total > 10000
@receiver(pre_save, sender=Order)
def prevent_high_value_order(sender, instance, **kwargs):
    if instance.total_amount > 10000:
        raise ValidationError("Orders over â‚¹10,000 are not allowed.")

# views.py or shell
from .models import Order

# This will raise ValidationError and not save
Order.objects.create(customer_name="John", total_amount=15000)
