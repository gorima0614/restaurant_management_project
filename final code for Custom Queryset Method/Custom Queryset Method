# models.py

from django.db import models

class ActiveQuerySet(models.QuerySet):
    def active(self):
        return self.filter(active=True)

class ActiveManager(models.Manager):
    def get_queryset(self):
        return ActiveQuerySet(self.model, using=self._db)

    def active(self):
        return self.get_queryset().active()

class Product(models.Model):
    name = models.CharField(max_length=100)
    price = models.DecimalField(max_digits=10, decimal_places=2)
    active = models.BooleanField(default=True)

    objects = ActiveManager()  # Use custom manager

    def __str__(self):
        return self.name

# Get all active products
Product.objects.active()

# Equivalent to:
Product.objects.filter(active=True)

class Product(models.Model):
    name = models.CharField(max_length=100)
    price = models.DecimalField(max_digits=10, decimal_places=2)
    active = models.BooleanField(default=True)

    objects = models.Manager()       # Default manager
    active_objects = ActiveManager() # Custom manager

# Usage:
Product.active_objects.active()
