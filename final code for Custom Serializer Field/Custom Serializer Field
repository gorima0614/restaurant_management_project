# models.py

from django.db import models

class Customer(models.Model):
    name = models.CharField(max_length=100)
    country_code = models.CharField(max_length=10)

    def __str__(self):
        return f"{self.name} ({self.country_code})"

# fields.py (custom serializer field)

from rest_framework import serializers

class UpperCaseCharField(serializers.CharField):
    def to_internal_value(self, data):
        value = super().to_internal_value(data)
        return value.upper() if isinstance(value, str) else value

# serializers.py

from rest_framework import serializers
from .models import Customer
from .fields import UpperCaseCharField  # Import the custom field

class CustomerSerializer(serializers.ModelSerializer):
    country_code = UpperCaseCharField(max_length=10)

    class Meta:
        model = Customer
        fields = ['id', 'name', 'country_code']

POST /api/customers/
{
  "name": "Alice",
  "country_code": "in"
}

Customer.objects.first().country_code  # => "IN"
